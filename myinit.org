#+STARTIP: overview
* Interface tweaks
#+BEGIN_SRC emacs-lisp
(setq inhibit-sartup-message t)
(fset 'yes-or-no-p 'y-or-n-p)
#+END_SRC

* Try
#+BEGIN_SRC emacs-lisp 
(use-package which-key
  :ensure t
  :config (which-key-mode))
#+END_SRC
* Auto Complete
#+BEGIN_SRC emacs-lisp 
(use-package auto-complete
  :ensure t
  :init
  (progn
    (ac-config-default)
    (global-auto-complete-mode t)
    ))
#+END_SRC

* Alias List buffers
#+BEGIN_SRC emacs-lisp
(defalias 'list-buffers 'ibuffer-other-window)
#+END_SRC

* Flycheck
#+BEGIN_SRC emacs-lisp
  (use-package flycheck
    :ensure t
    :init
    (global-flycheck-mode t))
#+END_SRC
* Python
#+BEGIN_SRC emacs-lisp
  (use-package company-jedi
    :ensure t
    :config
    (defun my/python-mode-hook ()
      (add-to-list 'company-backends 'company-jedi))
    (add-hook 'python-mode-hook 'jedi:setup)
    (add-hook 'python-mode-hook 'my/python-mode-hook)
    (setq jedi:complete-on-dot t))

#+END_SRC
* Yassnippet
#+BEGIN_SRC emacs-lisp
  (use-package yasnippet
    :ensure t
    :init
    (yas-global-mode 1))

  (use-package yasnippet-snippets
    :ensure t
    :init
    (yas-global-mode 1))
#+END_SRC
* GGTags
#+BEGIN_SRC emacs-lisp
  (require 'ggtags)
  (require 'dired)
  (ggtags-mode 1)
  (add-hook 'c-mode-common-hook
			(lambda ()
			  (when (derived-mode-p 'c-mode 'c++-mode 'java-mode 'asm-mode)
				(ggtags-mode 1))))

  (dolist (map (list ggtags-mode-map dired-mode-map))
	(define-key map (kbd "C-c g s") 'ggtags-find-other-symbol)
	(define-key map (kbd "C-c g h") 'ggtags-view-tag-history)
	(define-key map (kbd "C-c g r") 'ggtags-find-reference)
	(define-key map (kbd "C-c g f") 'ggtags-find-file)
	(define-key map (kbd "C-c g c") 'ggtags-create-tags)
	(define-key map (kbd "C-c g u") 'ggtags-update-tags)
	(define-key map (kbd "C-c g a") 'helm-gtags-tags-in-this-function)
	(define-key map (kbd "M-.") 'ggtags-find-tag-dwim)
	(define-key map (kbd "M-,") 'pop-tag-mark)
	(define-key map (kbd "C-c <") 'ggtags-prev-mark)
	(define-key map (kbd "C-c >") 'ggtags-next-mark))
  (setq-local imenu-create-index-function #'ggtags-build-imenu-index)

#+END_SRC

* Auto Completion with Companymode
#+BEGIN_SRC emacs-lisp
  (require 'company)
  (require 'company-c-headers)
  (require 'company-rtags)
  (push 'company-rtags company-backends)
  (add-to-list 'company-backends 'company-c-headers)
  (add-hook 'c-mode-common-hook 'hs-minor-mode)
  ;;(add-to-list 'company-c-headers-path-system "/usr/include/c++/14.2.1/")
  (add-hook 'after-init-hook 'global-company-mode)
  (setq company-backends (delete 'company-semantic company-backends))
  (setq c-default-style nil)
  (use-package cc-mode
    :init
    (define-key c-mode-map  [(tab)] 'company-complete)
    (define-key c++-mode-map  [(tab)] 'company-complete))
#+END_SRC
